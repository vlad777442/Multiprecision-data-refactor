syntax = "proto3";

package DATA;

message QueryTable {
  int32 rows = 1;
  int32 cols = 2;
  repeated uint64 content = 3;
}

message SquaredErrorsTable {
  int32 rows = 1;
  int32 cols = 2;
  repeated double content = 3;
}
//Mgard reconstr
//store buffer metadata
//data tier->fragment
//send fragments separately
message Variable {
  string name = 1;
  repeated uint32 dimensions = 2;
  string type = 3;
  uint32 levels = 4;
  repeated double level_error_bounds = 5;
  repeated uint32 stopping_indices = 6;
  QueryTable table_content = 7;
  SquaredErrorsTable squared_errors = 8;
//  repeated uint32 squared_errors_shape = 8;
  uint32 tiers = 9;
  //repeated Tier tier = 10;
}

message Tier {
  int32 id = 1;
  int32 k = 2;
  int32 m = 3;
  int32 w = 4;
  int32 hd = 5;
  string ec_backend_name = 6;
  uint64 encoded_fragment_length = 7;
  //repeated Fragment fragment = 8;
}

//Fragment
//id of tier
//id of fragment
//variable name
//k, m, w, hd
//data uint8
//bool isdata

message Fragment {
  int32 k = 1;
  int32 m = 2;
  int32 w = 3;
  int32 hd = 4;
  string ec_backend_name = 5;
  uint32 encoded_fragment_length = 6;

  uint32 idx = 7;
  uint32 size = 8;
  uint64 orig_data_size = 9;
  uint32 chksum_mismatch = 10;
  uint32 backend_id = 11;
//  string var_data_value_name = 12;
  string frag = 12;
  bool is_data = 13;
  uint32 tier_id= 14;
}
message VariableCollection {
  repeated Variable variables = 1;
}
